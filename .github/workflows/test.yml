name: "units-test"
on:
  pull_request:
  push:
    branches:
      - main
      - v*
      - 'releases/*'

jobs:
  # unit tests
  units:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: npm ci
    - run: npm test
    - name: test-1, query=nginx
      id: test-1
      uses: ./
      with:
        search: nginx
    - name: result=test-1
      run: echo '${{ steps.test-1.outputs.matrix }}'

    - name: test-2, query=nginx, limit=10
      id: test-2
      uses: ./
      with:
        search: nginx
        limit: 10
    - name: result=test-2
      run: echo '${{ steps.test-2.outputs.matrix }}'

    - name: test-3, query=nginx, date=2022
      id: test-3
      uses: ./
      with:
        search: nginx
        date: 2022
    - name: result=test-3
      run: echo '${{ steps.test-3.outputs.matrix }}'

    - name: test-4, query=nginx, version=1.22
      id: test-4
      uses: ./
      with:
        search: nginx
        version: 1.22
    - name: result=test-4
      run: echo '${{ steps.test-4.outputs.matrix }}'

    - name: test-5, query=nginx, date=2022, version=1.22
      id: test-5
      uses: ./
      with:
        search: nginx
        date: 2022
        version: 1.22
    - name: result=test-5
      run: echo '${{ steps.test-5.outputs.matrix }}'

  # test action works running from the graph
  generate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: release
      uses: ./
      with:
        search: nginx
        date: 2022
    outputs:
      matrix: ${{ steps.release.outputs.matrix }}

  matrix:
    runs-on: ubuntu-latest
    needs: generate
    strategy:
      matrix: ${{ fromJson(needs.generate.outputs.matrix) }}
    steps:
      - run: echo "Build ${{ matrix.version }}"
